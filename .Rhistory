summarise(chicago %>% select(city, dptp), pm25=mean(dptp))
summarise(chicago, pm25 = mean(dptp))
summarise(chicago, pm25 = mean(dptp))
summarise(chicago, pm25 = max(dptp))
chicago %>%
select(city, dptp)
summarise(chicago, dptp = max(dptp))
summarize(chicago, dptp = max(dptp))
summarize(chicago, tmpd = max(tmpd))
summary(chicago)
chicago %>% mutate(month=as.POSIlt(date)$mon + 1)
chicago %>% mutate(month=as.POSIXlt(date)$mon + 1)
chicago %>% mutate(month=as.POSIXlt(date)$mon + 1) %>%
group_by(month) %>%
summarize(pm25=mean(pm25, na.rm=TRUE)
chicago %>% mutate(month=as.POSIXlt(date)$mon + 1) %>%
group_by(month) %>%
summarize(pm25=mean(pm25, na.rm=TRUE)
)
chicago %>% mutate(month=as.POSIXlt(date)$mon + 1) %>%
group_by(month) %>%
summarize(pm25=mean(pm25, na.rm=TRUE))
chicago %>% mutate(month=as.POSIXlt(date)$mon + 1) %>%
group_by(month) %>%
rename(pm25 = pm25tmean2) %>%
summarize(pm25=mean(pm25, na.rm=TRUE))
chicago %>% mutate(month=as.POSIXlt(date)$mon + 1) %>%
group_by(month) %>%
rename(pm25 = pm25tmean2) %>%
summarize(pm25=max(pm25, na.rm=TRUE))
chicago %>% mutate(month=as.POSIXlt(date)$mon + 1) %>%
group_by(month) %>%
rename(pm25 = pm25tmean2) %>%
summarize(pm25=mean(pm25, na.rm=TRUE), var = var(pm25, rm.na=TRUE))
chicago %>% mutate(month=as.POSIXlt(date)$mon + 1) %>%
group_by(month) %>%
rename(pm25 = pm25tmean2) %>%
summarize(pm25=mean(pm25, na.rm=TRUE), var = var(pm25))
chicago %>% mutate(month=as.POSIXlt(date)$mon + 1) %>%
group_by(month) %>%
rename(pm25 = pm25tmean2) %>%
summarize(pm25=mean(pm25, na.rm=TRUE), varx = var(pm25))
chicago %>% mutate(month=as.POSIXlt(date)$mon + 1) %>%
group_by(month) %>%
rename(pm25 = pm25tmean2) %>%
summarize(pm25=mean(pm25, na.rm=TRUE), varx = s(pm25))
chicago %>% mutate(month=as.POSIXlt(date)$mon + 1) %>%
group_by(month) %>%
rename(pm25 = pm25tmean2) %>%
summarize(pm25=mean(pm25, na.rm=TRUE))
library(mtcars)
install.packages("mtcars")
library(mtcars)
data()
data(mtcars)
summary(mtcars)
attach(mtcars)
library(ggplot2)
search()
mtcars$mpg
library(dplyr)
names(mtcars)
View(mtcars)
df <- mtcars %>%
select(mpg, hp)
View(df)
summary(df)
ggplot2(aes(x=hp, y=mpg))
ggplot(aes(x=hp, y=mpg))
mpg
ggplot(aes(x=hp, y=df$mpg))
ggplot(aes(x=df$hp, y=df$mpg))
plot(x=hp, y=mpg)
plot(x=hp, y=df$mpg)
view(mtcars)
View(mtcars)
ggplot(df, aes(x = hp)) + geom_bar
ggplot(df, aes(x = hp)) + geom_bar()
ggplot(df, aes(x = hp)) + geom_point()
ggplot(df, aes(x = hp, y=mpg)) + geom_point()
df <- mtcars %>%
select(mpg, hp, cyl)
ggplot(df, aes(x = hp, y=mpg, col = cyl)) + geom_point()
ggplot(df, aes(x = mpg, y=hp, col = cyl)) + geom_point()
ggplot(df, aes(x = hp, y=mpg, col = cyl)) + geom_point()
data()
data(Titanic)
ggplot(titanic, aes(x=Survived))+geom_bar()
ggplot(Titanic, aes(x=Survived))+geom_bar()
View(Titanic)
t<-as.data.frame(Titanic)
ggplot(t, aes(x=Survived))+geom_bar()
t<-read.csv("/Users/hughj/Downloads/titanic3.csv")
View(t)
t<-read.csv("/Users/hughj/Downloads/titanic3.csv", stringsAsFactors = FALSE)
ggplot(t, aes(x=Survived))+geom_bar()
ggplot(t, aes(x=t$Survived))+geom_bar()
View(t)
ggplot(t, aes(x=survived))+geom_bar()
View(t)
summary(t$survived)
table(t$survived)
t$survived<-as.factor(t$survived)
ggplot(t, aes(x=survived))+geom_bar()
t$pclass<-as.factor(t$pclass)
t$sex<-as.factor(t$sex)
t$embarked<-as.factor(t$embarked)
?ggplot
?aes
prop.table(table(t$survived))
ggplot(t, aes(x=survived))+geom_bar() +
theme_bw() +
labs(y="Passenger Count")
ggplot(t, aes(x=survived))+geom_bar() +
theme_bw() +
labs(y="Passenger Count", title = "Titanic Survival Rates")
ggplot(t, aes(x=sex, fill=survived))+geom_bar() +
theme_bw() +
labs(y="Passenger Count", title = "Titanic Survival Rates by sex")
ggplot(t, aes(x=pclass, fill=survived))+geom_bar() +
theme_bw() +
labs(y="Passenger Count", title = "Titanic Survival Rates by class")
ggplot(t, aes(x=sex, fill=survived))+geom_bar() +
theme_bw() +
facet_wrap(~ pclass) +
labs(y="Passenger Count", title = "Titanic Survival Rates by class")
ggplot(t, aes(x=age) +
geom_histogram(binwidth = 5) +
theme_bw() +
labs(y="Passenger Count", x="Age(binwidth=5)",title = "Titanic Age Distribution")
ggplot(t, aes(x=age)) +
geom_histogram(binwidth = 5) +
theme_bw() +
labs(y="Passenger Count", x="Age(binwidth=5)",title = "Titanic Age Distribution")
ggplot(t, aes(x=age)) +
geom_histogram(binwidth = 5) +
theme_bw() +
labs(y="Passenger Count", x="Age(binwidth=5)",title = "Titanic Age Distribution")
ggplot(t, aes(x=age, fill = survived)) +
geom_histogram(binwidth = 5) +
theme_bw() +
labs(y="Passenger Count", x="Age(binwidth=5)",title = "Titanic Age Distribution")
theme_bw() +
labs(y="Age", x="ASurvived",title = "Titanic Rates by Age")
ggplot(t, aes(x=survived, y=age)) +
geom_boxplot() +
theme_bw() +
labs(y="Age", x="ASurvived",title = "Titanic Rates by Age")
ggplot(t, aes(x=age, fill = survived)) +
geom_density(alpha = 0.5) +
facet_wrap(sex ~ class())
ggplot(t, aes(x=age, fill = survived)) +
geom_density(alpha = 0.5) +
facet_wrap(sex ~ class()) +
theme_bw() +
labs(y="Age", x="Survived",title = "Survival Rates by Age, Class")
ggplot(t, aes(x=age, fill = survived)) +
geom_density(alpha = 0.5) +
facet_wrap(sex ~ class) +
theme_bw() +
labs(y="Age", x="Survived",title = "Survival Rates by Age, Class")
ggplot(t, aes(x=age, fill = survived)) +
geom_density(alpha = 0.5) +
facet_wrap(sex ~ pclass) +
theme_bw() +
labs(y="Age", x="Survived",title = "Survival Rates by Age, Class")
ggplot(t, aes(x=age, fill = survived)) +
geom_histogram(alpha = 0.5) +
facet_wrap(sex ~ pclass) +
theme_bw() +
labs(y="Age", x="Survived",title = "Survival Rates by Age, Class")
library(party)
library("party")
install.packages("party")
library(party)
m1<-ctree(Sepal.Length~., data=iris)
m1<-ctree(Sepal.Length~Sepal.Width+Petal.Length., data=iris)
m1<-ctree(Sepal.Length~Sepal.Width+Petal.Length, data=iris)
plot(m1)
?inner_panel
??inner_panel
?ctree
?plot
methods(plot)
plot(m1, inner_panel=node_inner(m1, pval FALSE, id=FALSE))
plot(m1, inner_panel=node_inner(m1, pval= FALSE, id=FALSE))
plot(m1, inner_panel=node_inner(m1, pval= FALSE, id=FALSE),
terminal_panel=node_terminal(m1, id=FALSE))
m2<-ctree(Species~Petal.Width+Petal.Length, data=iris)
plot(m2)
plot(m2, inner_panel=node_inner(m2, pval= FALSE, id=FALSE),
terminal_panel=node_terminal(m2, id=FALSE))
str(t)
?ggplot
ggplot(t, aes(x=home.dest)) +
geom_histogram()
ggplot(t, aes(x=age)) +
geom_histogram()
ggplot(t, aes(x=sex)) +
geom_histogram()
ggplot(t, aes(x=sex)) +
geom_bar()
ggplot(t, aes(x=sex)) +
geom_bar(na.rm = FALSE)
ggplot(t, aes(x=sex)) +
geom_bar(na.rm = TRUE)
ggplot(t, aes(x=sex)) +
?geom_bar(na.rm = TRUE)
?geom_bar
ggplot(t, aes(x=sex)) +
geom_bar(na.rm = TRUE)
table(t$sex)
View(t)
unique(t$sex)
ggplot(na.omit(t), aes(x=sex)) +
geom_bar(na.rm = TRUE)
ggplot(na.omit(t), aes(x=sex, col=survived)) +
geom_bar(na.rm = TRUE)
ggplot(na.omit(t), aes(x=sex, fill=survived)) +
geom_bar(na.rm = TRUE)
t1<-na.omit(t)
View(t1)
table(t1.survived)
table(t1$survived)
t1<-na.omit(t$survived==NA)
table(t1$survived)
View(t1)
t1<-na.omit(t[t$survived==NA,])
table(t1$survived)
t[t$survived==NA,]
t[t$survived==NULL,]
t[is.na(t$survived),]
t<-read.csv("/Users/hughj/Downloads/titanic3.csv",header = TRUE)
ggplot(t, aes(x=sex, fill=survived)) +
geom_bar(na.rm = TRUE)
table(t1$survived)
table(t1$sex)
table(t$sex)
table(t$survived)
ggplot(t, aes(x=sex)) +
geom_bar(na.rm = TRUE) +
theme_classic()
ggplot(t, aes(x=sex, fill = survived)) +
geom_bar(na.rm = TRUE) +
theme_classic()
ggplot(t, aes(x=sex, fill = survived)) +
geom_bar(na.rm = TRUE) +
theme_bw()
t$survived<-as.factor(t$survived)
t$pclass<-as.factor(t$pclass)
t$sex<-as.factor(t$sex)
t$embarked<-as.factor(t$embarked)
ggplot(t, aes(x=sex, fill = survived)) +
geom_bar(na.rm = TRUE) +
theme_bw()
m1<- ctree(survived~age, data=t)
m1
plot(m1)
m1<- ctree(survived~age+sex, data=t)
plot(m1)
m1<- ctree(survived~age+sex+pclass, data=t)
plot(m1)
?sample
s<-sample(nrow(t),nrow(t)*.75)
traind<-t[s,]
testd<-t[-s,]
p1<-predict(m1,testd)
table(testd$survived,p1)
set.seed(1)
m1<- ctree(survived~age+sex+pclass, data=t)
plot(m1)
s<-sample(nrow(t),nrow(t)*.75)
traind<-t[s,]
testd<-t[-s,]
p1<-predict(m1,testd)
table(testd$survived,p1)
glimpse(t)
median(t$age)
t$age
summary(t$age)
?median
median(t$age,rm.na=TRUE)
median(t$age,na.rm=TRUE)
library(party)
m1<-ctree(Sepal.Length~Sepal.Width+Petal.Length, data=iris)
plot(m1, inner_panel=node_inner(m1, pval= FALSE, id=FALSE),
terminal_panel=node_terminal(m1, id=FALSE))
str(m1)
data()
data("Titanic")
View(Titanic)
str(titanic)
str(Titanic)
mod<-tree(Survived~., Titanic)
?tree
library(tree)
library("tree")
library(rpart)
mod<-rpart(Survived~., data=Titanic, method="class")
plot(mod)
printcp(mod)
plotcp(mod)
plot(mod, uniform = TRUE, text(mod))
data()
data("USArrests")
str(USArrests)
set.seed(1)
crime<-kmeans(USArrests, 4)
plot(Murder~UrbanPop, data = crime, col=crime$cluster)
km_crime<-kmeans(USArrests, 4)
plot(Murder~UrbanPop, data = km_crime, col=crime$cluster)
str(km_crime)
crime<-kmeans(USArrests, 4)
str(crime)
plot(Murder~UrbanPop, data = USArrests, col=crime$cluster)
data("Titanic")
str(Titanic)
summary(Titanic)
attach(Titanic)
titanic<-read.csv("/Users/hughj/Downloads/Titanic.csv", header = TRUE)
str(titanic)
t1<-titanic[,-X]
t1<-titanic[,-Age]
names(titanic)
attach(titanic)
plot(age, Survived)
plot(Age, Survived)
summary(Age)
View(titanic)
n<-nrow(titanic)
shuffled_df<-titanic[sample(n),]
View(shuffled_df)
train_indicies<- 1:round(0.6 * n)
train_indices<- 1:round(0.6 * n)
train<-shuffled_df[train_indices]
train<-shuffled_df[train_indices,]
test_indices<-(round(0.6) * n) + 1):n
test_indices<-(round(0.6 * n) + 1):n
test<- shuffled_df[test_indices,]
str(train)
str(test)
?diag
library(rpart)
tree<-rpart(Survived~., data = train, method = "class")
pred<-predict(tree, test, type = "class")
conf<-table(test$Survived, pred)
print(table)
str(table)
table
print(conf)
str(conf)
conf
diag(conf)
sum(conf)
diag(conf)/sum(conf)
sum(diag(conf))/sum(conf)
wd()
getwd()
library(ggplot2)
library(dplyr)
install.packages("Gapminder")
install.packages("gapminder")
library(gapminder)
data()
head(gapminder)
filter(gapminder, year == 2007)
gap_07<-filter(gapminder, year == 2007)
filter(gapminder, country %in% c("France","Turkey"))
gapminder %>%
filter(year==2007) %>%
group_by(continent) %>%
summarize(medpop = median(pop))
gapminder %>%
filter(year==2007) %>%
group_by(continent) %>%
summarize(medpop = median(pop))
gapminder %>%
filter(year==2007) %>%
group_by(continent) %>%
summarize(medpop = median(pop))
?matrix
as.matrix(c(1,2,3,4))
m <- as.matrix(c(1,2,3,4))
dimnames(m) <- list("X","Y")
m <- as.matrix(c(1,2),c(3,4))
dimnames(m) <- list("X","Y")
m <- as.matrix(c(1,2,3,4), nrow=2, ncol=2, dimnames=list("X","Y"))
print(m)
diag(3)
diag(4)
diag(1:3)
diag(TRUE, 3)
diag(c(1:5))
diag(c(1:5),3)
diag(c(1:5))
diag(x = 1, 2,2)
a<-matrix(c(1:6), 2, 3)
matrix(c(1:6), 2, 3)
matrix(c(1:6), 2, 3, byrow = TRUE)
matrix(c(1:6), 2, 3, byrow = TRUE, dimnames = list("X","Y"))
matrix(c(1:6), 2, 3, byrow = TRUE, dimnames = list("X","Y","z"))
matrix(c(1:6), 2, 3, byrow = TRUE, dimnames = list("X","Y","Z","A","B"))
matrix(c(1:6), 2, 3, byrow = TRUE, dimnames = list(c("X","Y","Z"),c("A","B"))
matrix(c(1:6), 2, 3, byrow = TRUE, dimnames = list(c("X","Y","Z"),c("A","B"))
)
matrix(c(1:6), 2, 3, byrow = TRUE, dimnames = list(c("X","Y","Z"),c("A","B")))
matrix(c(1:6), 2, 3, byrow = TRUE, dimnames = list(c("X","Y"),c("A","B","C")))
a<-matrix(c(1:6), 2, 3, byrow = TRUE, dimnames = list(c("X","Y"),c("A","B","C")))
sum(a)
table(c(1:6))
t<-table(c(1:6))
t[1]
t[2]
v <- c(1,3,2,5)
v
y <- c(1,4,3)
ls()
x + y
v + y
v * y
?matrix
x <- c(1,2)
y <- c(3,4)
x + y
x * y
x4 <- c(1,2,3,4)
as.matrix(x4)
as.matrix(x4, byrow=TRUE)
matrix(data = x4, byrow = TRUE)
matrix(data = x4, byrow = TRUE, nrow=1)
matrix(data = x4,  nrow=1)
y4 <- c(5,6,7,8)
matrix(data = c(x4,y4), nrow = 2)
matrix(data = c(x4,y4), nrow = 2, byrow = TRUE)
m1 <- matrix(data=c(1,2,3,4), nrow=2, ncol=2)
m1
m2 <- matric(c(1,2,3,4),2,2)
m2 <- matrix(c(1,2,3,4),2,2)
m2
m2 <- matrix(c(1,2,3,4),2,2, byrow=TRUE)
m2
sqrt(m2)
m2^2
m2 * m1
m1
-m1
m2 - m1
x <- rnorm(50)
y<-x+rnorm(50, mean=50, sd = .1)
y
plot(y)
hist(y)
cor(x,y)
x
plot(x)
mean(y)
mean(x)
var(y)
sd(y)
set.seed(100)
x<-rnorm(50)
var(x)
sd(x)
set.seed(101)
y <- rnorm(50)
x - y
x[1]
y[1]
cor(x,y)
y<-x+rnorm(50)
y[1]
cor(x,y)
var(y)
sd(y)
z<-rnorm(50, mean=100, sd=.2)
box(z)
boxplot(z)
hist(z)
mean(z)
sd(z)
plot(x,y)
plot(x,y,xlab="x-axis", ylab="y-axis",main = "Hughs plot")
pdf("pretty-plot.pdf")
plot(x,y,xlab="x-axis", ylab="y-axis",main = "Hughs plot")
dev.off()
w<-3:11
w
x<-seq(-pi, pi, length=50)
x[1]
plot(x)
y <= x
f<-outer(x,y,function(x,y)cos(y)/(1+x^2))
contour(x,y,f)
y <- x
f<-outer(x,y,function(x,y)cos(y)/(1+x^2))
contour(x,y,f)
setwd("~/Developmment/osu/machine-learning/R")
getwd()
setwd("/Users/hughj/Developmment/osu/machine-learning/R")
setwd("~/Development/osu/machine-learning/R")
setwd("/Users/hughj/Development/osu/machine-learning/R")
setwd("~/Development/osu/machine-learning/R")
getwd()
A<-matrix(c(2,-1,0,-1,2,-1,0,-1,2),3,3,byrow = TRUE)
A
det(A)
isSymmetric(A)
eigenvalues <- eigen(A)
eigenvalues
eigenvectors <- eigenvalues$vectors
singular_val_decomp<-svd(A)
singular_val_decomp
